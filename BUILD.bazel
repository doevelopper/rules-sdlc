# Copyright 2019, Adrien HL
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#toolchain_type(
#    name = "toolchain_type",
#    visibility = ["//visibility:public"],
#)

licenses(["notice"])  # MIT

config_setting(
    name = "linux",
    constraint_values = ["@bazel_tools//platforms:linux"],
    visibility = ["//visibility:public"],
)

config_setting(
    name = "linux_x86_64",
    constraint_values = [
        "@bazel_tools//platforms:linux",
        "@bazel_tools//platforms:x86_64",
    ],
    visibility = ["//visibility:public"],
)

config_setting(
    name = "osx",
    constraint_values = ["@bazel_tools//platforms:osx"],
    visibility = ["//visibility:public"],
)

config_setting(
    name = "windows",
    constraint_values = ["@bazel_tools//platforms:windows"],
    visibility = ["//visibility:public"],
)

config_setting(
    name = "linux_aarch64",
    constraint_values = [
        "@bazel_tools//platforms:linux",
        "@bazel_tools//platforms:aarch64",
    ],
    visibility = ["//visibility:public"],
)

config_setting(
    name = "x86_64",
    constraint_values = [
        "@bazel_tools//platforms:x86_64",
    ],
    visibility = ["//visibility:public"],
)

config_setting(
    name = "arm64v8",
    values = {
        "define": "ARCH=aarch64",
    },
    visibility = ["//visibility:public"],
)

config_setting(
    name = "amd_x86_64",
    values = {
        "define": "ARCH=x86_64",
    },
    visibility = ["//visibility:public"],
)

alias(
    name = "on_linux",
    actual = select(
        {
            ":linux_x86_64": ":linux_x86_64",
            ":linux_aarch64": ":linux_aarch64",
            ## If we're not on an linux platform return a value that will never match in the select() statement calling this
            ## since it would have already been matched above.
            "//conditions:default": ":linux_x86_64",
        },
    ),
)
